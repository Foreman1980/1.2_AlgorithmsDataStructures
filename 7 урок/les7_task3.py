#    Задание № 3 урока № 7:
#    Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом. Найдите в массиве медиану. Медианой
# называется элемент ряда, делящий его на две равные части: в одной находятся элементы, которые не меньше медианы, в
# другой — не больше медианы.
#
#    Примечание: задачу можно решить без сортировки исходного массива. Но если это слишком сложно, используйте метод
# сортировки, который не рассматривался на уроках (сортировка слиянием также недопустима).

from random import randint

m = 5
lst = [randint(0, 5) for _ in range(2 * m + 1)]
print(f'Исходный список - {lst}')

def selectionSort(lst): # сортировка не используется, для наглядности вывода
    for i in range(len(lst)):
        idxMin = i
        for j in range(i + 1, len(lst)):
            if lst[idxMin] > lst[j]:
                idxMin = j
        lst[i], lst[idxMin] = lst[idxMin], lst[i]

dct = {}
for i in range(len(lst)):
    dct[i] = [0, 0, 0]  # будем считать кол-во чисел меньше, больше и равных каждому элементу исходного списка
# print(dct)            # т.к. числа в исх. списке могут повторяться, в качестве ключей словаря используем их индексы

for key in dct.keys():
    for i in range(len(lst)):
        if lst[i] < lst[key]:
            dct[key][0] += 1
            continue
        elif lst[i] > lst[key]:
            dct[key][2] += 1
        else:
            dct[key][1] += 1

# print(dct)

for key in dct.keys():
    if 0 <= len(lst) // 2 - dct[key][0] < dct[key][1]:
        print(f'Медианное значение = {lst[key]}')
        break

selectionSort(lst)
print(f'Отсортированный список для проверки - {lst}')

# Вывод вида -  Исходный список - [0, 5, 5, 1, 3, 1, 4, 5, 5, 1, 5]
#               Медианное значение = 4
#               Отсортированный список для проверки - [0, 1, 1, 1, 3, 4, 5, 5, 5, 5, 5]
#
#               Process finished with exit code 0
